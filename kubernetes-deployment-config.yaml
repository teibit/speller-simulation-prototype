apiVersion: v1
kind: Service
metadata:
   name: app-service
   namespace: default
spec:
   type: NodePort
   selector:
      app: app-service
   ports:
      - name: broker-int
        protocol: TCP
        port: 9090
        targetPort: 9090
      - name: broker-ext
        protocol: TCP
        port: 9092
        targetPort: 9092
      - name: controller
        protocol: TCP
        port: 9094
        targetPort: 9094
      - name: producer
        protocol: TCP
        port: 20
        targetPort: 20
      - name: consumer
        protocol: TCP
        port: 25
        targetPort: 25
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app-deployment
  template:
    metadata:
      labels:
        app: app-deployment
    spec:
      containers:
      - name: raw-topics-producer-container
        image: raw-topics-producer
        imagePullPolicy: Never
        ports:
          - containerPort: 20
      - name: processed-topics-consumer-container
        image: processed-topics-consumer
        imagePullPolicy: Never
        ports:
          - containerPort: 25
      - name: numbers-processor-consumer-producer-container
        image: numbers-processor-consumer-producer
        imagePullPolicy: Never
        ports:
          - containerPort: 26
      - name: dots-processor-consumer-producer-container
        image: dots-processor-consumer-producer
        imagePullPolicy: Never
        ports:
          - containerPort: 27
      - name: bitnami-kafka-broker-container
        image: bitnami/kafka
        imagePullPolicy: IfNotPresent
        env:
          - name: KAFKA_CFG_NODE_ID
            value: '0'
          - name: KAFKA_CFG_PROCESS_ROLES
            value: controller,broker
          - name: KAFKA_CFG_LISTENERS
            value: INTERNAL://:9090,EXTERNAL://:9092,CONTROLLER://:9094
          - name: KAFKA_ADVERTISED_LISTENERS
            value: INTERNAL://app-service:9090,EXTERNAL://localhost:9092
          - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
            value: CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
          - name: KAFKA_INTER_BROKER_LISTENER_NAME
            value: INTERNAL
          - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
            value: CONTROLLER
          - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
            value: 0@:9094
        ports:
          - name: broker-int
            containerPort: 9090
          - name: broker-ext
            containerPort: 9092
          - name: controller
            containerPort: 9094
      - name: mysql-server-container
        image: mysql
        imagePullPolicy: IfNotPresent
        env:
          - name: MYSQL_DATABASE
            value: Numeralia
          - name: MYSQL_ALLOW_EMPTY_PASSWORD
            value: '1'
        volumeMounts:
          - mountPath: /Numeralia
            name: numeralia
      - name: postgres-server-container
        image: postgres
        imagePullPolicy: IfNotPresent
        env:
          - name: POSTGRES_DB
            value: Numeralia
          - name: POSTGRES_PASSWORD
            value: 'postgres'
          - name: POSTGRES_HOST_AUTH_METHOD
            value: 'trust'
        volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: numeralia
          - mountPath: docker-entrypoint-initdb.d/postgres-ini.sql
            name: postgres-ini
      - name: numeralia-db-manager-container
        image: numeralia-db-manager
        imagePullPolicy: Never
        ports:
          - containerPort: 30
      volumes:
      - name: numeralia
      - name: postgres-ini
        hostPath:
          path: /Users/teibit/app/postgres-ini.sql
          type: File
